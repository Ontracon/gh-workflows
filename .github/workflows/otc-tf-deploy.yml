on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:

  prepare:
    name: Prepare - ${{ inputs.environment }}
    #needs: project
    environment: ${{ inputs.environment }}
    runs-on: [otc-static]
    outputs:
       aws_cloud_enabled: ${{ steps.get_project.outputs.aws_cloud_enabled }}
       azr_cloud_enabled: ${{ steps.get_project.outputs.azr_cloud_enabled }}
       gcp_cloud_enabled: ${{ steps.get_project.outputs.gcp_cloud_enabled }}
       aws_regions: ${{ steps.get_project.outputs.aws_regions }}
       azr_regions: ${{ steps.get_project.outputs.azr_regions }}
       gcp_regions: ${{ steps.get_project.outputs.gcp_regions }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Project
        id: get_project
        run: |
         FILE="${{ github.workspace }}/.otc/project.tfvars.json"
         echo "otc_backend=`jq -c '.otc.otc_backend' $FILE`" >> "$GITHUB_OUTPUT"
         echo "otc_region=`jq -c '.otc.otc_region' $FILE`" >> "$GITHUB_OUTPUT"
         echo "aws_cloud_enabled=`jq -c '.project.aws_cloud_enabled' $FILE`" >> "$GITHUB_OUTPUT"
         echo "azr_cloud_enabled=`jq -c '.project.azr_cloud_enabled' $FILE`" >> "$GITHUB_OUTPUT"
         echo "gcp_cloud_enabled=`jq -c '.project.gcp_cloud_enabled' $FILE`" >> "$GITHUB_OUTPUT"
         echo "aws_regions=`jq -c '.project.aws_regions' $FILE`" >> "$GITHUB_OUTPUT"
         echo "azr_regions=`jq -c '.project.azr_regions' $FILE`" >> "$GITHUB_OUTPUT"
         echo "gcp_regions=`jq -c '.project.gcp_regions' $FILE`" >> "$GITHUB_OUTPUT"
         echo "File: $FILE"
      -  run: |
          echo  ${{ steps.get_project.outputs.otc_region }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN}}
          aws-region: ${{ steps.get_project.outputs.otc_region }}
      # - name: AWS Backend
      #   uses: otc-code/gh-actions/terraform@main
      #   with:
      #     TERRAFORM_ACTION: 'create_backend'
      #     TF_DIR: ${{ github.workspace }}
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TF_PARTIAL_BACKEND_FILE: '${{ github.workspace }}/env/${{  github.event.inputs.environment }}/aws.${{matrix.cloud_region}}.tfbackend'
      #     CLOUD_REGION: ${{matrix.cloud_region}}

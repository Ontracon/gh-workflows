on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:

  prepare:
    name: ${{ inputs.environment }}
    environment: ${{ inputs.environment }}
    runs-on: [otc-static]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Project
        id: get_project
        run: |
         FILE="${{ github.workspace }}/.otc/project.tfvars.json"
         echo "otc_region=`jq -c '.otc.otc_region' $FILE`" >> "$GITHUB_OUTPUT"
         echo "aws_cloud_enabled=`jq -c '.project.aws_cloud_enabled' $FILE`" >> "$GITHUB_OUTPUT"
         echo "azr_cloud_enabled=`jq -c '.project.azr_cloud_enabled' $FILE`" >> "$GITHUB_OUTPUT"
         echo "gcp_cloud_enabled=`jq -c '.project.gcp_cloud_enabled' $FILE`" >> "$GITHUB_OUTPUT"
         echo "File: $FILE"
      - name: Configure AWS Credentials
        if: ${{ fromJson(steps.get_project.outputs.aws_cloud_enabled)==true }}
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN}}
          aws-region: ${{ fromJson(steps.get_project.outputs.otc_region) }}
      - name: 'Configure GCP Credentials'
        if: ${{ fromJson(steps.get_project.outputs.gcp_cloud_enabled)==true }}
        uses: 'google-github-actions/auth@v1.0.0'
        with:
            create_credentials_file: 'true'
            workload_identity_provider: ${{ secrets.GCP_PROVIDER_NAME}}
            service_account: ${{ secrets.GCP_SA_EMAIL}}
      - name: 'Configure Azure Credentials'
        if: ${{ fromJson(steps.get_project.outputs.azr_cloud_enabled)==true }}
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Backend
        uses: otc-code/gh-actions/terraform@main
        with:
          TERRAFORM_ACTION: 'create_backend'
          TF_DIR: ${{ github.workspace }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_PARTIAL_BACKEND_FILE: '${{ github.workspace }}/.otc/${{ inputs.environment }}.tfbackend'
          CLOUD_REGION: ${{ fromJson(steps.get_project.outputs.otc_region) }}

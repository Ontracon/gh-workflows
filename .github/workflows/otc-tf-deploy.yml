on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string

jobs:
  # project:
  #   name: Get Project Info
  #   runs-on: [otc-static]
  #   outputs:
  #     aws: ${{ steps.get_project.outputs.aws_cloud_enabled }}
  #     azr: ${{ steps.get_project.outputs.azr_cloud_enabled }}
  #     gcp: ${{ steps.get_project.outputs.gcp_cloud_enabled }}
  #     gh_runner: ${{ steps.get_env.outputs.gh_runner }}
  #     aws_regions: ${{ steps.get_project.outputs.aws_regions }}
  #     azr_regions: ${{ steps.get_project.outputs.azr_regions }}
  #     gcp_regions: ${{ steps.get_project.outputs.gcp_regions }}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Get Project
  #       id: get_project
  #       run: |
  #        FILE="${{ github.workspace }}/.otc/project.tfvars.json"
  #        echo "aws_cloud_enabled=`jq -c '.aws' $FILE`" >> "$GITHUB_OUTPUT"
  #        echo "azr_cloud_enabled=`jq -c '.azr' $FILE`" >> "$GITHUB_OUTPUT"
  #        echo "gcp_cloud_enabled=`jq -c '.gcp' $FILE`" >> "$GITHUB_OUTPUT"
  #        echo "aws_regions=`jq -c '.aws_regions' $FILE`" >> "$GITHUB_OUTPUT"
  #        echo "azr_regions=`jq -c '.azr_regions' $FILE`" >> "$GITHUB_OUTPUT"
  #        echo "gcp_regions=`jq -c '.gcp_regions' $FILE`" >> "$GITHUB_OUTPUT"
  #        echo "File: $FILE"

  deploy:
    name: Deploy - ${{  github.event.inputs.env }}
    #needs: project
    environment: ${{  github.event.inputs.env }}
    runs-on: [otc-static]
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

